name: JAVA CI
on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  docker_username: ${{ secrets.DOCKER_USERNAME }}
  docker_password: ${{ secrets.DOCKER_PASSWORD }}
  GIT_COMMIT: ${{ github.sha }}
jobs:
  Clone:
    runs-on: ubuntu-latest
    steps:
      - name: clone-down
        uses: actions/checkout@v2
      - name: Upload Repo
        uses: actions/upload-artifact@v2
        with: 
          name: code
          path: .
  Build:
    runs-on: ubuntu-latest
    container: gradle:6-jdk11
    needs: [Clone]
    steps:
      - name: retrive Repo
        uses: actions/download-artifact@v2
        with: 
          name: code
          path: .
      - name: Build with gradle
        run: chmod +x ci/build-app.sh && ci/build-app.sh
      - name: Upload Jar
        uses: actions/upload-artifact@v2
        with: 
          name: Jar
          path: app/build/libs/app-0.1-all.jar
      - name: Upload Repo
        uses: actions/upload-artifact@v2
        with: 
          name: code
          path: .
      - name: Upload Dockerfile
        uses: actions/upload-artifact@v2
        with: 
          name: Dockerfile
          path: app/Dockerfile
  Test:
    runs-on: ubuntu-latest
    container: gradle:6-jdk11
    needs: [Clone]
    steps:
      - name: retrive Repo
        uses: actions/download-artifact@v2
        with: 
          name: code
          path: .
      - name: Test
        run: chmod +x ci/unit-test-app.sh && ci/unit-test-app.sh
  Docker_image_v1:
    runs-on: ubuntu-latest
    needs: [Build, Test]
    steps:
      - name: retrive build
        uses: actions/download-artifact@v2
        with: 
          name: code
          path: .
      - name: build docker
        run: chmod +x ci/build-docker.sh && ci/build-docker.sh
      - name: push docker
        run: chmod +x ci/push-docker.sh && ci/push-docker.sh
  # Docker_image_v2:
  #   runs-on: ubuntu-latest
  #   needs: [Build, Test]
  #   steps:
  #     - name: retrive Jar
  #       uses: actions/download-artifact@v2
  #       with: 
  #         name: code
  #         path: .
  #     - name: retrive Dockerfile
  #       uses: actions/download-artifact@v2
  #       with: 
  #         name: Dockerfile
  #         path: .
  #     - name: Login to DockerHub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ env.docker_username }}
  #         password: ${{ env.docker_password }}
  #     - name: Setup
  #       run: echo GIT_COMMIT=${GIT_COMMIT::8} >> $GITHUB_ENV
  #     - name: Build and push
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: .
  #         file: ./Dockerfile
  #         push: true
  #         tags: ${{ env.docker_username }}/micronaut-app:1.0-${{ env.GIT_COMMIT }}
  Component-test:
    runs-on: ubuntu-latest
    needs: [Docker_image_v1]
    steps:
      - name: retrive build
        uses: actions/download-artifact@v2
        with: 
          name: code
          path: .
      - name: Execute component test
        run: chmod +x ci/component-test.sh && GIT_COMMIT="GA-$GITHUB_SHA" && ci/component-test.sh
  Performance-test:
    runs-on: [self-hosted]
    needs: [Docker_image_v1]
    steps:
      - name: retrive build
        uses: actions/download-artifact@v2
        with: 
          name: code
          path: .
      - name: Execute component test
        run: chmod +x ci/performance-test.sh && GIT_COMMIT="GA-$GITHUB_SHA" && ci/performance-test.sh



        
